/**********************************************************************************************************/
/**********************************************************************************************************/
/******* Starts with 'Global' styles which is relavant for entire index.html and major classes. ***********/
/**********************************************************************************************************/
/**********************************************************************************************************/


/**** Below 2 modifications handle css scrolling for Github pages ****/
html {
  scroll-behavior: smooth;  /* Ensure smooth scrolling and not jumping 
                               to anchor link(#) in header menu*/
}

#about, #projects, #skills { 
  scroll-margin-top: 60px; /* Margin ensures that anchor links does 
                              not overlap with section header text.
                              Instead, the menu is right above anchored section.
                              */
}

/******************************************************/

body {
  /*margin: 0;                          /* NOT NEEDED =>No margins around <body> */
  /*margin-left: 0;                      /* NOT NEEDED => Gets rid of white-sliver on left margin*/
  margin-bottom: 0;                      /* Removes white-sliver at bottom of viewport*/
  font-family: "Montserrat", sans-serif; /* default font-style for entire <body> */
  cursor: default;                       /* Makes 'pointer' cursor default */

  /* Seamless background pattern for visuals*/
  background-image: url(../images/body_tiles_background_small_edited.png); 
}

/* Used to wrap 'everything' ind <body> in one <div> wrapper with flex column direction. */
.page-wrapper { 

  min-height: 100vh;      /* Makes body touch viewport bottom (at minimum!) */
  display: flex;          /* Makes the entire page a flex object !*/
  flex-direction: column; /* All the menu, sections, and footer are vertically stacked. */
}


/* Unlike 'page-wrapper', 'wrapper' is used to wrap only 1 section */
.wrapper {          /* prevents any nested <div> from growing too wide*/
  max-width: 760px; /* Width stops growing for over 760px */
  
  margin: 0 auto; /* Centers block-level components horizontally 
                     (since <body> doesn't define 'display', child <div> is block by default). 
                     '0' means no top or bottom margins (no vertical space)
                     'auto' makes left & right margins equal (centering inside parent) 
                    */

  display: flex;          /* Turns 'wrapper' containers into flex objects */
  flex-direction: column; /* This causes 'wrappers' flex objects to STACK wtihout in-between spaces*/

  border-radius: 30px;    /* Rounded main container corners for styling */
  margin-top: 30px;       /* Creates 30px gap between blocks (to enable in-between spaces) */

  background-image: url(../images/paper_texture.jpg); /* Background image texture for each 'wrapper' */
}

@media only screen and (max-width: 760px) {
  .wrapper {
    width: 98%; /* Adjustment for shrinking screen width*/
  }
}


.shadow { /* Turns associated object(s) with this class to have shadow pop-up effect */
  box-shadow: 5px 5px 5px rgb(116, 101, 101);
}

.menu-space { /* Margin space for top "About" 'wrapper' to make space for floating header menu */
  margin-top: 40px;
}

/**********************************************************************************************************/
/**********************************************************************************************************/
/******************************** Styling for header-menu for >=760px. ************************************/
/**********************************************************************************************************/
/**********************************************************************************************************/

.header-menu {
  position: fixed;  /* Ensures header-menu STAYS fixed at top (essential for 'floating' menu) */
  top: 0;           /* No blank space margin at top (menu touches screens' edge!) */
  max-width: 760px; /* Prevents menu from being TOO wide for desktop */
  width: 100%;      /* The Menu covers entire screen from left to right*/

  /* Notable is that due to .page-wrapper being flex display,
   * The menu is right off-center. Below 2 lines fixes that. 
   */
  left: 50%;                   /* Shift to center of screen */
  transform: translateX(-50%); /* Pull back by half its width */

  background-color:rgba(51,39,39,0.9); /* Make background color opaque WITHOUT affecting text!*/

  display: flex;            /* Enables flexbox layout mode for header-menu */
  justify-content: center;  /* keeps unordered list inside centered*/

  z-index: 2;               /* ENsures header-menu floats on front */

  border-radius: 0 0 30px 30px; /* Rounds bottom-most corners of menu */
}

.header-menu ul {
  list-style-type: none;  /* Removes list bullet points */
  width: 90%;             /* 90% of menu container's width covered 
                             (and prevent links from touching menu's edge). */
  display: flex;          /* Enables flexbox layout mode for header-menu */

  padding-left: 0px;      /* Removes left-padding causing menu-links to be off-center*/
}

.header-menu li {
  flex-grow: 1;           /* Keeps objects space equally (since parent is flex object) */
  text-align: center;     /* Helps keep text links centered (in conjunction with 'padding-left' above) */
}

.header-menu li a {  /* For style text in header menu */
  color: white;                               /* White colored text */
  text-decoration: none;                        /* removes underline */
  font-family: "Libre Baskerville", sans-serif; /* Text-font for menu */
  font-style: italic;                           /* Italic menu items*/
}
.header-menu li a:hover { /* Makes menu options 'Red' on hover */
  color: red;
  cursor: default;
}

/**********************************************************************************************************/
/**********************************************************************************************************/
/************************Styling for 'about' class and sub-sections for >=760px.***************************/
/**********************************************************************************************************/
/**********************************************************************************************************/

.about {
  width: 100%;                   /* Matches width of 'wrapper' */
  display: flex;                 /* Turns 'about' class into fetch object */
  flex-direction: row;           /* Ensures nested flex objects are in row*/
  justify-content: space-around; /* puts in-between space between nested objects*/
}

.about-me { /* Ensures space for portrait on right*/
  width: 55%; 
}

@media only screen and (max-width: 640px) {
  .about-me {
    width: 48%; /* Adjustment for shrinking screen width*/
  }
}

.about .portrait-container {
  align-self: flex-start;  /* Ensures container 'float' to top in flex parent with resizing screen*/

  width: 200px; /* Default width of image */
  min-width: 180px;
  top: 30px;    /* Moves container 30px downward 
                   (requires relative/absolute/fixed position to work!)*/

  overflow: hidden;   /* Hide any part of the image that goes beyond the circle */
  border-radius: 11%; /* Make the container's corners rounded. */
  position:relative;  /* For position purposes */
}

.about .portrait-container img {
  width: 100%; /* Image scales to size of parent '.portrait-container' */
}


/* At under 480px, column layout causes 
   photo to be under description*/
@media only screen and (max-width: 480px) {

  .about {
    flex-direction: column;
    align-items: center; /* Ensures everything inside is centered */
    text-align: center;  /* Centers text inside */
  }

  .about-me {
    width: 86%; /* Ensure white space on left/right edges of About description */
  }

  .about .portrait-container {
    top: 0;               /* Undoes the 'top: 30px;' from earlier (works due to 'absolute' position) */
    margin-bottom: 30px;  /* adds 30px at bottom to avoid bottom edge*/
    width: 200px;         /* image takes full width of container*/

    justify-content: center; /* Centers image inside container */
    margin-top: 20px;        /* Adds space between text and image */
    align-self: center;      /* Centers horizontally if parent if 'flex' or 'grid'*/

    /*
    Altenative: "margin: 20px auto 30px auto;"
    This replaces 'margin-bottom', 'margin-top', and align-self.
    the 'auto' makes left and right sides equal.
    */
  }
}


/**********************************************************************************************************/
/**********************************************************************************************************/
/***********************Styling for 'project' class and sub-sections for >=760px.**************************/
/**********************************************************************************************************/
/**********************************************************************************************************/

.all-projects {
  padding: 10px 20px 10px 20px; /* Padding between content and edge of parent 'wrapper' */
}

.all-projects .project { /* Creates dashed border line under each project */
  border-bottom: 1px dashed #343434;
  padding: 25px 0 ;
}

.all-projects .project:last-of-type { /* Makes sure there's no dashed border line at bottom of LAST project*/
  border-bottom: none;
}

.project .description {     /* Enables flex-box for 'description' class components */
    display: flex;
    padding-bottom: 10px;;
}

.description .description-left { /* Sets size are of 'description' left to button(s) */
    max-width: none; /*<== Was 70%, which caused Project #3 img & description 
                            to NOT full expand for <=540px */
    padding-right: 4px;
}

#highlight {    /* Underlines and bolds the 'Project #' declaration */
    text-decoration: underline;
    font-weight: bold;
}

.project .button-right {  /*Creates a 'button' class for project 'live demo' and 'Github repository' links */

    color: #f7fff7;      /* Button text color */
    background: #2f3061; /* Button backgorund color */

    padding: 8px 12px;  /* Makes button look 'larger' by adding padding */
    border-radius: 4px; /* 'Roundness' of button corners */

    text-align: center; /* Centers text inside bttn */

    height: 100%;       /* dynamic height of button*/

    align-self: center;  /* Centers vertically if parent uses 'flex' or 'grid'*/
    margin: 0 auto;      /* Centers horizontally if parent uses 'flex' 
                            since 'auto' makes both sides equi-distant. 
                            Alternative is to use "margin: auto" for both vertical 
                            & horizontal centering and remove "align-self: center".
                            */
}

.project .button-right:hover { /* Color change when hovering over button*/
    background: rgba(47, 48, 97, 80%);
}

.proj-img-bottom img {      /* Styling for image under Project #1*/
    max-width: 100%;        /* Ensure image never exceeds container, ultimately causing scaling. */
}

/***** Add a horizonal scroller for Project#1 demo image *****/

.no-scrolling {  /* Set "no-scolling" class <div> as block  */
  display: block;
}

.with-scrolling { /* The horizonal scroller doesn't trigger until 540px width */
  display: none;
}

@media only screen and (max-width: 720px) { /* Used to trigger horizontal scroller at 540px or less */

  .no-scrolling { /*Removes non-scrollable version of img (important keyword ensures this) */
    display: none !important;
  }

  .with-scrolling {
    display: block;       /* container behaves as block-level element*/

    overflow-x: auto;     /* triggers horizontal scrolling when content overflows*/
                          /* 'overflow-y: hidden;' not needed (since vertical is too small to trigger(?)) */
                          /* 'white-space: nowrap;' not need since there's no other images to wrap under */ 
    max-width: 100%;      /*  images container scales with parent container */
  }                             

  .with-scrolling img{      
    min-width: 721px;     /* Ensures image is wide enough for scrolling */
  }

  /*** These are used to stylize horizontal-scroller, 
       which appears under 720px. ***/
  .with-scrolling::-webkit-scrollbar {
    height: 8px;   /* Controls scroll bar's thickness */
  }
  .with-scrolling::-webkit-scrollbar-track {
    background: #e0e0e0;   /* Scroll track's background color is light-gray */
    border-radius: 10px;       /* Rounded corners for scrollbar track */
  }
  .with-scrolling::-webkit-scrollbar-thumb {
    background: #2f3061;        /* Dark color for actual thumb (aka 'horizontal scroller') contrast */
    border-radius: 10px;          /* Rounded corners for thumb */
    border: 1px solid #e0e0e0;  /* Adds some space and contrast between thumb and track */
  }
  .with-scrolling::-webkit-scrollbar-thumb:hover {
    background: rgba(47, 48, 97, 80%); /* Thumb's color lightens on hover just like all buttons */
  }
}

/* Improves reponsiveness of 'Project' section for <=480px */
@media only screen and (max-width: 480px) { 

  .all-projects h2, p { /* Header and intro text centered */
    text-align: center; 
  }
  .project .description { /*Nested Description and button are in columns*/
    display: flex;
    flex-direction: column;
  }
  .project .description-left{
    max-width: none;
    text-align: left;  /* Centers text inside */
  }
  .project .button-right {
    margin-top: 10px; 
  }
}

/********************************************************************/
/********* Below is relevant for Project #3 and onwards!!  **********/
/********************************************************************/

.description-left.with-image {  
  /* '.with-image' class used in CONJUNCTION with '.description-left' class 
      in order to use flexbox to handle nested image 
      and description <div>
  */
  display: flex;
  flex-direction: row; /* Puts nested <div> in row */
  gap: 15px;           /* Creates Gap/space between nested <div> */
}

.proj-img-left {
  width: 150px;       /* Fixed width for image container (image will be 150px width) */
  flex-shrink: 0;     /* Prevents 'overshrinking' of container */
}

.proj-img-left img {   /* Keeps fixed image size for placeholder image (for snap shot of live demo!).*/
  width: 100%;
  aspect-ratio: 1/1;   /* Keeps image squared regardless of chosen width */
  object-fit: cover;   /* Ensures image covers container without distorting 
                          (may cause parts to be out-of-bounds) */
  border-radius: 15px; /* Makes project demo image's corners rounder! */
}

/* 'buttons' class is used to nest multiple buttons (.button-right) */
.buttons {            /* Used to manage multiple buttons ('Github repo' and 'Live Demo')*/
  display: flex;      /* 'Flex' used ot present buttons vertically(column) */
  flex-direction: column;

  margin-right: auto; /* Ensure open-space margin on right is filled */
  margin-left: auto;  /* Ensure open-space margin on left is filled */
                      /* Together, margin-right and margin-left makes <div> centered 
                         and VISUALLY line up with buttons for previous projects listed */
}

.buttons .button-right { /* Styling for buttons inside 'buttons' <div> class */
  width:fit-content;     /* Button width matches text*/
  height:fit-content;    /* Button height matches text */
  margin: auto;          /* Ensures equi-disance/centered spacing vertically & horizonally */
}


@media only screen  and (max-width: 540px) { 

  /*This '.expanded' varient of '.description' puts the
    buttons below the image and description 
    (which are still side-by-side for now).
  */
  .description.expanded {
    flex-direction: column;
    width: 100%;

  }

  .buttons .button-right { /* 20px space between stacked buttons*/  
      margin-top: 20px; 
  }
} 

/*
@media only screen and (max-width: 480px) { 
  .all-projects h2, p { 
    text-align: center; 
  }
  .project .description { 
    display: flex;
    flex-direction: column;
  }
  .project .description-left{
    max-width: none;
    text-align: left;  
  }
  .project .button-right {
    margin-top: 10px; 
  }
} */


@media only screen and (max-width: 480px) { 
  /* This is used to add space between buttons in 'buttons' class 
     that are touching on top of each other at under 480px. */
  .buttons .button-right {  
   margin-top: 20px; /* 'margin-top' adds space on top of buttons */
  }
}

/* Used to get project demo image above description on mobile screens*/
@media only screen and (max-width: 440px) {  

  .description-left.with-image { /* On mobile screens, the demo image and 
                   description aligns vertically for better visuals
                   (note: class="with-image" is an accompanying class 
                   for <div> using class='description-left' 
                   (which already has 'flex') */
    flex-direction: column; 
  }

  .proj-img-left { 
    display: flex; /* Turn project demo image into flex object */
    width: 100%;   /* Matches width of parent container */
  }
  
  .proj-img-left img {
    width: 65%;          /* Only 65% of parent container seems like a good size visually (not too big or small) */
    align-self: center;  /* Centers vertically when parent uses 'flex' or 'grid'*/
    margin: 0 auto;      /* Centers horizontally if parent uses 'flex' since 'auto' 
                            makes both sides equi-distant. Alternative is to use "margin: auto" 
                            for both vertical & horizontal centering and remove "align-self: center". */
  }

}

/**********************************************************************************************************/
/**********************************************************************************************************/
/***********************Styling for 'skills' class and sub-sections for >=760px.***************************/
/**********************************************************************************************************/
/**********************************************************************************************************/

.skills { /* Creates spacing around the main content against the 'wrapper' parent class */
    padding: 10px 20px 10px 20px;
}

.icon {  /* Size styling for all imported icons*/
  width: 56px;
  height: 100%;
  padding: 10px;
}

@media only screen and (max-width: 480px) { 
  .skills h2, h3, p { /* Centers text for mobile screen for visuals*/
    text-align: center;
  }
}

/**********************************************************************************************************/
/**********************************************************************************************************/
/***********************Styling for 'footer' class and sub-sections for >=760px.***************************/
/**********************************************************************************************************/
/**********************************************************************************************************/

.footer { /* styling for bottom-most footer element */

  margin-bottom: 0%;

  border-radius: 30px 30px 0 0; /* Adds rounded corners on footer*/

  background-color: rgb(56, 51, 51); /* Background color */
  width: 100%;                         /* Max width inside 'wrapper' */
  height: 30px;                        /* Height of footer */

  display: flex;            /* Turns footer into 'flex' object */
  justify-content: center;  /* In flex, centers item(s) horizontally */
  align-items: center;      /* In flex, centers item(s) vertically */
  color: white;           /* White color text */
}

.footer-wrapper {
  background-image: none; /* Removes background image of 'wrapper' at footer (since it was showing) */

  width: 100%;
  padding-top: 30px;
  margin-top: auto; 
}

/*
.page-wrapper > .footer-wrapper {
  width: 100%;
  padding-top: 30px;
  margin-top: auto; }*/ /* 👈 Pushes footer to bottom when space is available */


/**********************************************************************************************************/
/**********************************************************************************************************/
/************************ Styling for 'Contact' class in Contact.html page. *******************************/
/**********************************************************************************************************/
/**********************************************************************************************************/

.contact {
  width: 100%;                   /* Matches width of 'wrapper' */
  display: flex;                 /* Turns 'about' class into fetch object */
  flex-direction: row;           /* Ensures nested flex objects are in row*/
  justify-content: space-around; /* puts in-between space between nested objects*/
}

.contact-me { /* Ensures space for contact's portrait on right*/
  margin: auto;
  width: 70%; 

}

@media only screen and (max-width: 640px) {
  .contact-me {
    width: 60%; /* Adjustment for shrinking screen width*/
  }
}

.contact .portrait-container {
  align-self: flex-start;  /* Ensures container 'float' to top in flex parent with resizing screen*/
  margin: auto;
  width: 130px;

  top: 0px;  /* Moves container 0px downward 
                (requires relative/absolute/fixed position to work!)*/

  overflow: hidden;   /* Hide any part of the image that goes beyond the circle */
  border-radius: 11%; /* Make the container's corners rounded. */
  position:relative;  /* For position purposes */
} 

.contact .portrait-container img {
  width: 100%; /* Image scales to size of parent '.portrait-container' */
}


@media only screen and (max-width: 480px) {

  .contact {   /* Changes flex-direction to column for <=480px (stacking containers)*/
    flex-direction: column;
    align-items: center;  /* Ensures everything inside is centered */
    text-align: center;   /* Centers text inside */
  }

  .contact-me {
    width: 86%; /* Ensure white space on left/right edges of About description */
  }

  .contact .portrait-container {
    top: 0;               /* Undoes the 'top: 30px;' from earlier (works due to 'absolute' position) */
    margin-bottom: 30px;  /* adds 30px at bottom to avoid bottom edge*/
    width: 200px;         /* image takes full width of container*/

    justify-content: center; /* Centers image inside container */
    margin-top: 20px;        /* Adds space between text and image */
    align-self: center;      /* Centers horizontally if parent if 'flex' or 'grid'*/

    /*
    Altenative: "margin: 20px auto 30px auto;"
    This replaces 'margin-bottom', 'margin-top', and align-self.
    the 'auto' makes left and right sides equal.
    */
  }
}


